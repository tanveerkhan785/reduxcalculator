{"version":3,"sources":["App.js","actions/index.js","reportWebVitals.js","reducers/UpDown.js","reducers/multDiv.js","reducers/index.js","store.js","index.js"],"names":["App","myState","useSelector","state","changeTheNumber","myOtherState","multTheNumber","dispatch","useDispatch","className","title","onClick","type","name","value","payload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAyCeA,EApCH,WACV,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,mBACvCC,EAAeH,aAAY,SAACC,GAAD,OAAWA,EAAMG,iBAC5CC,EAAWC,cACjB,OACE,qCACI,sBAAKC,UAAU,YAAf,UACI,6DACA,wDAEA,sBAAKA,UAAU,WAAf,UACG,oBAAGA,UAAU,kBAAkBC,MAAM,YACrCC,QAAU,kBAAMJ,ECTrB,CACFK,KAAK,eDOE,cACyC,uCADzC,OAEC,uBAAOC,KAAK,WAAWD,KAAK,OAAOH,UAAU,kBAAkBK,MAAOb,IACvE,oBAAGQ,UAAU,iBAAiBC,MAAM,YACpCC,QAAU,kBAAMJ,ECnBrB,CACFK,KAAK,YACLG,QDiB0C,KADnC,cAC0C,uCAD1C,aAKP,sBAAKN,UAAU,YAAf,UACI,+DACA,wDAEA,sBAAKA,UAAU,WAAf,UACG,oBAAGA,UAAU,mBAAmBC,MAAM,SACtCC,QAAU,kBAAMJ,ECTrB,CACFK,KAAK,SACLG,QDO6C,KADtC,cAC6C,uCAD7C,OAEC,uBAAOF,KAAK,WAAWD,KAAK,OAAOH,UAAU,kBAAkBK,MAAOT,IACvE,oBAAGI,UAAU,qBAAqBC,MAAM,WACxCC,QAAU,kBAAMJ,ECnBrB,CACFK,KAAK,iBACLG,QDiB4C,KADrC,cAC4C,uCAD5C,iBEpBAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCGCb,EARS,WAAmC,IAAlCD,EAAiC,uDAFrC,EAE0BsB,EAAW,uCACtD,OAAOA,EAAOb,MACV,IAAK,YAAa,OAAOT,EAAQsB,EAAOV,QACxC,IAAK,YAAa,OAAOZ,EAAQ,EACjC,QAAS,OAAOA,ICITG,EARO,WAAmC,IAAlCH,EAAiC,uDAFnC,EAEwBsB,EAAW,uCACpD,OAAOA,EAAOb,MACV,IAAK,iBAAkB,OAAOT,EAAQsB,EAAOV,QAC7C,IAAK,SAAU,OAAOZ,EAAQsB,EAAOV,QACrC,QAAS,OAAOZ,ICITuB,EALKC,YAAgB,CAChCvB,kBACAE,kBCFWsB,EAFDC,YAAYH,EAAaI,OAAOC,8BAAgCD,OAAOC,gCCKrFH,EAAMI,WAAU,kBAAMC,QAAQC,IAAIN,EAAMO,eAExCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,SAM1BxB,M","file":"static/js/main.73e337b1.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { incNumber, decNumber, divideNumber, multiNumber } from './actions/index';\n\nconst App = () => {\n  const myState = useSelector((state) => state.changeTheNumber);\n  const myOtherState = useSelector((state) => state.multTheNumber);\n  const dispatch = useDispatch();\n  return (\n    <>\n        <div className='container'>\n            <h1>Increment/Decrement counter</h1>\n            <h4>Using React and Redux </h4>\n\n            <div className='quantity'>\n               <a className='quantity__minus' title='Decrement'\n               onClick={ () => dispatch(decNumber()) }> <span> - </span> </a>\n                <input name='quantity' type=\"text\" className='quantity__input' value={myState} />\n               <a className='quantity__plus' title='Increment' \n               onClick={ () => dispatch(incNumber(5)) }> <span> + </span> </a>\n            </div>\n        </div>\n\n        <div className='container'>\n            <h1>Multiplication/Divide counter</h1>\n            <h4>Using React and Redux </h4>\n\n            <div className='quantity'>\n               <a className='quantity__divide' title='divide'\n               onClick={ () => dispatch(divideNumber(5)) }> <span> / </span> </a>\n                <input name='quantity' type=\"text\" className='quantity__input' value={myOtherState} />\n               <a className='quantity__multiply' title='multiply' \n               onClick={ () => dispatch(multiNumber(5)) }> <span> * </span> </a>\n            </div>\n             \n        </div>\n    </>\n  )\n}\n\nexport default App\n","export const incNumber = (num) => {\r\n    return{\r\n        type:\"INCREMENT\",\r\n        payload: num,\r\n    }\r\n}\r\n\r\nexport const decNumber = () => {\r\n    return{\r\n        type:\"DECREMENT\"\r\n    }\r\n}\r\n\r\nexport const multiNumber = (num) => {\r\n    return{\r\n        type:\"MULTIPLICATION\",\r\n        payload: num,\r\n    }\r\n}\r\n\r\nexport const divideNumber = (num) => {\r\n    return{\r\n        type:\"DIVIDE\",\r\n        payload: num,\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = 0;\r\n\r\nconst changeTheNumber = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"INCREMENT\": return state + action.payload;\r\n        case \"DECREMENT\": return state - 1;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default changeTheNumber;","const initialState = 5;\r\n\r\nconst multTheNumber = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"MULTIPLICATION\": return state * action.payload;\r\n        case \"DIVIDE\": return state / action.payload;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default multTheNumber;","import changeTheNumber from \"./UpDown\";\r\nimport multTheNumber from './multDiv';\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    changeTheNumber,\r\n    multTheNumber\r\n})\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nstore.subscribe(() => console.log(store.getState()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}